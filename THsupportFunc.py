import numpy as np

def Ts(P): # saturation pressure, P in unit bar, T in unit celsius
	Tsat = list(range(0, 371, 10))
	Tsat.append(374.15)
	Psat = [0.006112,0.012271,0.023368,0.042418,0.073750,0.12335,0.19919,0.31161,0.47358,0.70109,1.01325,1.4327,1.9854,2.7011,3.6136,4.7597,6.1804,7.9202,10.027,12.553,15.550,19.080,23.202,27.979,33.480,39.776,46.941,55.052,64.191,74.449,85.917,98.694,112.89,128.64,146.08,165.37,186.74,210.53,221.2]

	return np.interp(P, Psat, Tsat)

def Ps(T): # saturation pressure, T in celsius, P in unit bar
	Tsat = list(range(0, 371, 10))
	Tsat.append(374.15)
	Psat = [0.006112,0.012271,0.023368,0.042418,0.073750,0.12335,0.19919,0.31161,0.47358,0.70109,1.01325,1.4327,1.9854,2.7011,3.6136,4.7597,6.1804,7.9202,10.027,12.553,15.550,19.080,23.202,27.979,33.480,39.776,46.941,55.052,64.191,74.449,85.917,98.694,112.89,128.64,146.08,165.37,186.74,210.53,221.2]

	return np.interp(T, Tsat, Psat)

def hf(P): # unit kj / kg, P in bar
	T = Ts(P)

	Tsat = list(range(0, 371, 10))
	Tsat.append(374.15)
	hliq=[0.000611,41.99,83.86,125.66,167.47,209.3,251.1,293.0,334.9,376.9,419.1,461.3,503.7,546.3,589.1,632.2,675.5,719.1,763.1,807.5,852.4,897.7,943.7,990.3,1037.6,1085.8,1135.0,1185.2,1236.8,1290,1345,1402,1462,1526,1596,1672,1762,1892,2095]

	return np.interp(T, Tsat, hliq)

def hg(P): # unit kj / kg, P in bar
	T = Ts(P)

	Tsat = list(range(0, 371, 10))
	Tsat.append(374.15)

	hvap=[2501,2519,2538,2556,2574,2592,2609,2626,2643,2660,2676,2691,2706,2720,2734,2747,2758,2769,2778,2786,2793,2798,2802,2803,2803,2801,2796,2790,2780,2766,2749,2727,2700,2666,2623,2565,2481,2331,2095]

	return np.interp(T, Tsat, hvap)

def sf(P): # unit kj/kg*K, P unit bar
	T = Ts(P)

	Tsat = list(range(0, 301, 10))
	Tsat.append(320)
	Tsat.append(340)
	Tsat.append(360)
	Tsat.append(374.15)

	sliq=[0,0.151,0.2966,0.4369,0.5725,0.7038,0.8312,0.9549,1.0753,1.1925,1.3069,1.4185,1.5276,1.6344,1.7391,1.8418,1.9427,2.0419,2.1396,2.2359,2.3309,2.4248,2.5178,2.6099,2.7015,2.7927,2.8838,2.9751,3.0668,3.1594,3.2534,3.448,3.6594,3.9147,4.4298]

	return np.interp(T, Tsat, sliq)

def sg(P): # unit kj/kg*K, P unit bar
	T = Ts(P)

	Tsat = list(range(0, 301, 10))
	Tsat.append(320)
	Tsat.append(340)
	Tsat.append(360)
	Tsat.append(374.15)

	svap=[9.1562,8.9008,8.6672,8.4533,8.2570,8.0763,7.9096,7.7553,7.6122,7.4791,7.3549,7.2387,7.1296,7.0269,6.9299,6.8379,6.7502,6.6663,6.5857,6.5079,6.4323,6.3585,6.2861,6.2146,6.1437,6.0730,6.0019,5.9301,5.8571,5.7821,5.7045,5.5362,5.3357,5.0526,4.4298]

	return np.interp(T, Tsat, svap)

def vf(P):
	T = Ts(P)

	Tsat = list(range(0, 371, 10))
	Tsat.append(374.15)

	vliq=1e-3*np.array([1.0002,1.0004,1.0018,1.0044,1.0079,1.0121,1.0171,1.0228,1.0290,1.0359,1.0435,1.0515,1.0603,1.0697,1.0798,1.0906,1.1021,1.1144,1.1275,1.1415,1.1565,1.1726,1.1900,1.2087,1.2291,1.2512,1.2755,1.3023,1.3321,1.3655,1.4036,1.4475,1.4992,1.562,1.639,1.741,1.894,2.22,3.17])

	return np.interp(T, Tsat, vliq)

def vg(P):
	T = Ts(P)

	Tsat = list(range(0, 371, 10))
	Tsat.append(374.15)

	vvap=[206.146,106.422,57.836,32.929,19.546,12.045,7.6776,5.0453,3.4083,2.3609,1.6730,1.2101,0.89171,0.66832,.50866,.39257,.30685,.24262,.19385,.15635,.12719,.104265,.086062,.071472,.059674,.05056,.042149,.035599,.030133,.025537,.021643,.018316,.015451,.012967,.010779,.008805,.006943,.00493,.00317]


	return np.interp(T, Tsat, vvap)

def Cpf(P):  # Cpf for sat. fluid, unit KJ / (kg * K), T in celcius
	T = Ts(P)
	Tsat = list(range(0, 371, 10))
	Tsat.append(374.15)

	Cpliq=[4.218,4.194,4.182,4.179,4.179,4.181,4.185,4.191,4.198,4.207,4.218,4.230,4.244,4.262,4.282,4.306,4.334,4.366,4.403,4.446,4.494,4.550,4.613,4.685,4.769,4.866,4.985,5.134,5.307,5.520,5.794,6.143,6.604,7.241,8.225,10.07,15,55,1e6]

	return np.interp(T, Tsat, Cpliq)

def Cpg(P): # Cpg for sat. gas, unit KJ / (kg * K), P in bar
	T = Ts(P)
	Tsat = list(range(0, 371, 10))
	Tsat.append(374.15)

	Cpvap=[1.863,1.870,1.880,1.890,1.900,1.912,1.924,1.946,1.970,1.999,2.034,2.076,2.125,2.180,2.245,2.320,2.406,2.504,2.615,2.741,2.883,3.043,3.223,3.426,3.656,3.918,4.221,4.575,4.996,5.509,6.148,6.968,8.060,9.580,11.87,15.8,27.0,107.0,1e5]

	return np.interp(T, Tsat, Cpvap)

def Cvg(P): # Cvg for sat. gas, unit KJ / (kg, K), P in bar
	Psat = [0.00613,0.012271,0.023368,0.042418,0.073750,0.12335,0.19919,0.31161,0.47358,0.70109,1.01325,1.4327,1.9854,2.7011,3.6136,4.7597,6.1804,7.9202,10.027,12.553,15.550,19.080,23.202,27.979,33.480,39.776,46.941,55.052,64.191,74.449,85.917,98.694,112.89,128.64,146.08,165.37,186.74,210.53, 220]
	Cvvap = [1.4184, 1.4269, 1.4359, 1.4452, 1.4552, 1.4663, 1.4789, 1.4937, 1.5111, 1.5316, 1.5558, 1.5843, 1.6177, 1.6562, 1.7002, 1.7497, 1.8044, 1.864, 1.9279, 1.9956, 2.0666, 2.1405, 2.2172, 2.2968, 2.3794, 2.4655, 2.5555, 2.6502, 2.7503, 2.8568, 2.9708, 3.0937, 3.2276, 3.3755, 3.543, 3.7417, 4.0068, 4.5664, 5.8097]


	return np.interp(P, Psat, Cvvap)






def uf(P): # P unit bar, uf unit kj / kg * K

	hliq=np.array([0.000611,41.99,83.86,125.66,167.47,209.3,251.1,293.0,334.9,376.9,419.1,461.3,503.7,546.3,589.1,632.2,675.5,719.1,763.1,807.5,852.4,897.7,943.7,990.3,1037.6,1085.8,1135.0,1185.2,1236.8,1290,1345,1402,1462,1526,1596,1672,1762,1892,2095])
	vliq=1e-3 * np.array([1.0002,1.0004,1.0018,1.0044,1.0079,1.0121,1.0171,1.0228,1.0290,1.0359,1.0435,1.0515,1.0603,1.0697,1.0798,1.0906,1.1021,1.1144,1.1275,1.1415,1.1565,1.1726,1.1900,1.2087,1.2291,1.2512,1.2755,1.3023,1.3321,1.3655,1.4036,1.4475,1.4992,1.562,1.639,1.741,1.894,2.22,3.17])
	Psat=np.array([0.006112,0.012271,0.023368,0.042418,0.073750,0.12335,0.19919,0.31161,0.47358,0.70109,1.01325,1.4327,1.9854,2.7011,3.6136,4.7597,6.1804,7.9202,10.027,12.553,15.550,19.080,23.202,27.979,33.480,39.776,46.941,55.052,64.191,74.449,85.917,98.694,112.89,128.64,146.08,165.37,186.74,210.53,221.2])
	uliq=hliq-(1e5* np.multiply(Psat, vliq))/1e3

	return np.interp(P, Psat, uliq)

def ug(P):  # P unit bar, ug unit kj / kg * K

	hvap=np.array([2501,2519,2538,2556,2574,2592,2609,2626,2643,2660,2676,2691,2706,2720,2734,2747,2758,2769,2778,2786,2793,2798,2802,2803,2803,2801,2796,2790,2780,2766,2749,2727,2700,2666,2623,2565,2481,2331,2095])
	vvap=1e-3 * np.array([206.146,106.422,57.836,32.929,19.546,12.045,7.6776,5.0453,3.4083,2.3609,1.6730,1.2101,0.89171,0.66832,.50866,.39257,.30685,.24262,.19385,.15635,.12719,.104265,.086062,.071472,.059674,.05056,.042149,.035599,.030133,.025537,.021643,.018316,.015451,.012967,.010779,.008805,.006943,.00493,.00317])
	Psat=np.array([0.006112,0.012271,0.023368,0.042418,0.073750,0.12335,0.19919,0.31161,0.47358,0.70109,1.01325,1.4327,1.9854,2.7011,3.6136,4.7597,6.1804,7.9202,10.027,12.553,15.550,19.080,23.202,27.979,33.480,39.776,46.941,55.052,64.191,74.449,85.917,98.694,112.89,128.64,146.08,165.37,186.74,210.53,221.2])
	uvap=hvap-(1e5* np.multiply(Psat, vvap))/1e3

	return np.interp(P, Psat, uvap)



def vgToT(vgIn): # T in celcius, vg in m^3 / kg

	Tsat = list(range(0, 371, 10))
	Tsat.append(374.15)

	vvap=[206.146,106.422,57.836,32.929,19.546,12.045,7.6776,5.0453,3.4083,2.3609,1.6730,1.2101,0.89171,0.66832,.50866,.39257,.30685,.24262,.19385,.15635,.12719,.104265,.086062,.071472,.059674,.05056,.042149,.035599,.030133,.025537,.021643,.018316,.015451,.012967,.010779,.008805,.006943,.00493,.00317]


	return np.interp(vgIn, vvap, Tsat)


def ufToT(ufIn): # P unit bar, uf unit kj / kg * K

	hliq=np.array([0.000611,41.99,83.86,125.66,167.47,209.3,251.1,293.0,334.9,376.9,419.1,461.3,503.7,546.3,589.1,632.2,675.5,719.1,763.1,807.5,852.4,897.7,943.7,990.3,1037.6,1085.8,1135.0,1185.2,1236.8,1290,1345,1402,1462,1526,1596,1672,1762,1892,2095])
	vliq=1e-3 * np.array([1.0002,1.0004,1.0018,1.0044,1.0079,1.0121,1.0171,1.0228,1.0290,1.0359,1.0435,1.0515,1.0603,1.0697,1.0798,1.0906,1.1021,1.1144,1.1275,1.1415,1.1565,1.1726,1.1900,1.2087,1.2291,1.2512,1.2755,1.3023,1.3321,1.3655,1.4036,1.4475,1.4992,1.562,1.639,1.741,1.894,2.22,3.17])
	Psat=np.array([0.006112,0.012271,0.023368,0.042418,0.073750,0.12335,0.19919,0.31161,0.47358,0.70109,1.01325,1.4327,1.9854,2.7011,3.6136,4.7597,6.1804,7.9202,10.027,12.553,15.550,19.080,23.202,27.979,33.480,39.776,46.941,55.052,64.191,74.449,85.917,98.694,112.89,128.64,146.08,165.37,186.74,210.53,221.2])
	uliq=hliq-(1e5* np.multiply(Psat, vliq))/1e3

	P = np.interp(ufIn, uliq, Psat)

	return Ts(P)


# E1 / Mb_n, Vcont / Mb_n 83.1447908173 0.005703913751869123


# print(vf(7.14))

print(Ts(83.1447908173))

print(vgToT(0.005703913751869123))

